----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    11:23:54 04/12/2021 
-- Design Name: 
-- Module Name:    sisdigproj - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity sisdigproj is
    Port ( clk : in  STD_LOGIC;
           measured_speed_left : in  STD_LOGIC_VECTOR(8 DOWNTO 0);--9 bit
           measured_speed_right : in  STD_LOGIC_VECTOR(8 DOWNTO 0); --9 bit
           goal_speed_left : inout  STD_LOGIC_VECTOR(7 DOWNTO 0);--8 BIT
           goal_speed_right : inout  STD_LOGIC_VECTOR(7 DOWNTO 0); --8 BIT
           size : in  STD_LOGIC; -- ???
           position : in  STD_LOGIC_VECTOR(1 DOWNTO 0); --2 bit
           action_left : out  STD_LOGIC_VECTOR(8 DOWNTO 0);--9 bit
           action_right : out  STD_LOGIC_VECTOR(8 DOWNTO 0);--9 bit
           delay : out  STD_LOGIC);
end sisdigproj;

architecture Behavioral of sisdigproj is

begin

Process (size, position, clk,  measured_speed_left,  measured_speed_right)
begin
	If rising_edge(clk) then
		error_left <= goal_speed_left - measured_speed_left;
		error_right <= goal_speed_right - measured_speed_right;
		-- yang kita kasih ke billy:
		action_left <= (28 *leftmotor) + error_left; -- signed bit
		action_right <= (28 *rightmotor) + error_right; -- signed bit
	End if;
	
	If size < 30 then
		robot_dir <= 1;
		size_speed <= 30; -- maju
	Elsif size >= 30 and size <= 60 then 
		robot_dir <= 1;
		processed_size <=size/2 -- bagi 2, shift right
		size_speed <= 30 - processed_size; -- maju pelan
	Else -- jika size>60%
		robot_dir <= 0;
		size_speed <= 30; -- mundur
	End if;

	If position = 11 then
		goal_speed_left <= 2*size_speed;
		goal_speed_right <= 2*size_speed; 
		If robot_dir = '1' then-- maju lurus
			leftmotor <= 1; -- left motor maju
			rightmotor <= 1; -- right motor maju
		else-- mundur lurus
			leftmotor <= 0; -- left motor mundur 
			rightmotor <= 0; -- right motor mundur
		end if;
	
	Elsif position = 10 then-- maju belok kiri
		If robot_dir = '1' then
			goal_speed_left <= size_speed;
			leftmotor <= 1; -- left motor maju
			goal_speed_right <= 2*size_speed;
			rightmotor <= 1; -- right motor maju
		else -- mundur kanan
			goal_speed_left <= 2*size_speed; 
			leftmotor <= 0; -- left motor mundur
			goal_speed_right <= size_speed; 
			rightmotor <= 0; -- right motor mundur
		end if;
 

	Elsif position = 10 then
		If robot_dir = '1' then-- maju belok kanan
			goal_speed_left <= 2*size_speed; 
			leftmotor <= 1; -- left motor maju
			goal_speed_right <= size_speed; 
			rightmotor <= 1; -- right motor maju
		else -- mundur kiri
			goal_speed_left <= size_speed;
			leftmotor <= 0; -- left motor mundur
			goal_speed_right <= 2*size_speed; 
			rightmotor <= 0; -- right motor mundur
		end if;
		
	Else -- belom ada putih -- muter searah jarum jam
		while counter < '2' loop				
			goal_speed_left <= size_speed; 
			leftmotor <= 1; -- left motor maju
			goal_speed_right <= size_speed; 
			rightmotor <= 0; -- right motor mundur
		end loop;
		delay; --delay berapa lama?
		counter <=0; -- kembalikan counter ke 0

	End if;

End process;

end Behavioral;

